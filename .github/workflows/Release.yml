name: Release Compilation The Normal

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-x64
          - os: ubuntu-latest
            runtime: linux-arm64
          - os: ubuntu-latest
            runtime: osx-x64
          - os: ubuntu-latest
            runtime: win-x64
          - os: ubuntu-latest
            runtime: win-x86
          - os: ubuntu-latest
            runtime: win-arm64
          - os: ubuntu-latest
            runtime: osx-arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: Build
      run: |
        dotnet publish -c Release -r ${{ matrix.runtime }} -p:PublishSingleFile=true -p:PublishReadyToRun=true -o out/${{ matrix.runtime }}
      timeout-minutes: 10 
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        
    - name: Zip the build output
      run: |
        cd "out/${{ matrix.runtime }}"
        zip -r "../${{ matrix.runtime }}.zip" .
      timeout-minutes: 5
      shell: pwsh
      
    - name: Upload
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      with:
        files: out/*
        
    - name: Send JSON notification
      run: |
        sudo apt-get install jq -y
        TAG_NAME=${GITHUB_REF#refs/tags/}
        REPO_NAME=${GITHUB_REPOSITORY}
        RUN_DURATION=$SECONDS
        JSON_DATA=$(jq -n \
                  --arg tag "$TAG_NAME" \
                  --arg repo "$REPO_NAME" \
                  --arg duration "$RUN_DURATION" \
                  '{tag: $tag, repo: $repo, duration: $duration}')
        curl -L -X POST https://blog.git.dreamogi.com/api/Release \
             -H "Content-Type: application/json" \
             -H "X-Hub-Secret: tkKgPXhdTahAcjSI048dWJahspouAn1W" \
             -d "$JSON_DATA"