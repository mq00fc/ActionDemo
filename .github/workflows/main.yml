name: AOT Compilation and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-x64
          - os: macos-latest
            runtime: osx-x64

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Build with AOT
      run: |
        dotnet publish -c Release -r ${{ matrix.runtime }} --self-contained -o out/${{ matrix.runtime }} -p:UseAppHost=true
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1

    - name: Zip the build output
      run: |
        cd out/${{ matrix.runtime }}
        zip -r ../${{ matrix.runtime }}.zip .
        ls -l
      shell: bash

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.runtime }}-build
        path: out/${{ matrix.runtime }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: out

      - name: Extract tag name
        id: get_tag
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
        env:
          GITHUB_REF: ${{ github.ref }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: Release ${{ steps.get_tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload Release Asset for Linux x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: out/linux-x64.zip
          asset_name: ConsoleApp1-linux-x64.zip
          asset_content_type: application/zip

      - name: Upload Release Asset for macOS x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: out/osx-x64.zip
          asset_name: ConsoleApp1-osx-x64.zip
          asset_content_type: application/zip
