name: AOT Compilation and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-x64
          - os: macos-latest
            runtime: osx-x64
          - os: windows-latest
            runtime: win-x64
          - os: ubuntu-latest
            runtime: linux-arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Set up QEMU
      if: matrix.runtime == 'linux-arm64'
      uses: docker/setup-qemu-action@v3

    - name: Build with Docker for linux-arm64
      if: matrix.runtime == 'linux-arm64'
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker build -t myapp-${{ matrix.runtime }} -f Dockerfile .
        docker run --rm -v "$(pwd)/out/${{ matrix.runtime }}:/app/out" myapp-${{ matrix.runtime }} /bin/bash -c "dotnet publish -c Release -r ${{ matrix.runtime }} --self-contained -o /app/out -p:UseAppHost=true"
      timeout-minutes: 20 
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1

    - name: Build with AOT for non-arm64
      if: matrix.runtime != 'linux-arm64'
      run: |
        dotnet publish -c Release -r ${{ matrix.runtime }} --self-contained -o out/${{ matrix.runtime }} -p:UseAppHost=true
      timeout-minutes: 10
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        
    - name: Zip the build output
      run: |
        if ("${{ runner.os }}" -eq "Windows") {
          Compress-Archive -Path "out/${{ matrix.runtime }}/*" -DestinationPath "out/${{ matrix.runtime }}.zip"
        } else {
          cd "out/${{ matrix.runtime }}"
          zip -r "../${{ matrix.runtime }}.zip" .
          ls
        }
      timeout-minutes: 5
      shell: pwsh

    - name: Upload
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      with:
        files: out/*
